{"version":3,"sources":["components/redux/TaskList-reducer.js","components/Task/Task.jsx","components/TaskList/TaskList.js","components/TaskList/TaskListContainer.jsx","components/Header/header.jsx","components/Header/headerContainer.js","components/Footer/filters/filters.jsx","components/Footer/footer.jsx","components/Footer/FooterContainer.js","App.js","components/redux/redux-store.js","index.js"],"names":["TYPE_DELETE_TASK","TYPE_ONLABEL_CLICK","TYPE_CLEAR_COMPLETED_ITEMS","TYPE_ADD_TASK","TYPE_EDIT_TASK","TYPE_CHANGE_TIME_TASK","initialState","tasks","text","time","Date","now","id","completed","dateNow","itemsLeft","taskListReducer","state","action","stateCopy","type","length","newTask","push","filter","item","task","newTasks","map","formatDistanceToNowStrict","addSuffix","Task","editMode","props","checkbox","activateEditMode","setState","deactivateEditMode","el","onEditItem","key","onTextChange","currentTarget","value","activateCheckBox","onLabelClicked","deactivateCheckBox","this","timerID","setInterval","tick","clearInterval","onChangeTime","onDeleteItem","className","defaultChecked","onClick","role","placeholder","onKeyPress","onChange","React","Component","TaskList","elements","exact","path","render","elementsAll","compose","connect","dispatch","Header","newItem","handleKeyPress","ref","createRef","HeaderContainer","current","AddItemAC","Filters","to","Footer","clearCompleted","FooterContainer","App","reducers","combineReducers","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cc478a48.chunk.js","sourcesContent":["import { formatDistanceToNowStrict } from 'date-fns';\n\nconst TYPE_DELETE_TASK = 'DELETE-TASK';\nconst TYPE_ONLABEL_CLICK = 'ONLABEL-CLICK';\nconst TYPE_CLEAR_COMPLETED_ITEMS = 'CLEAR-COMPLETED-ITEMS';\nconst TYPE_ADD_TASK = 'ADD-TASK';\nconst TYPE_EDIT_TASK = 'EDIT-TASK';\nconst TYPE_CHANGE_TIME_TASK = 'TYPE_CHANGE_TIME_TASK';\n\nconst initialState = {\n\ttasks: [\n\t\t{ text: 'Completed task', time: Date.now(), id: 1, completed: '', dateNow: null },\n\t\t{ text: 'Editing task', time: Date.now(), id: 2, completed: '', dateNow: null },\n\t\t{ text: 'Active task', time: Date.now(), id: 3, completed: '', dateNow: null },\n\t],\n\titemsLeft: 3,\n};\nconst taskListReducer = (state = initialState, action) => {\n\tconst stateCopy = { ...state };\n\tconst { tasks } = state;\n\tswitch (action.type) {\n\t\tcase TYPE_ADD_TASK: {\n\t\t\tconst id = state.tasks.length + 1;\n\t\t\tconst newTask = {\n\t\t\t\ttext: action.text,\n\t\t\t\tid,\n\t\t\t\tcompleted: '',\n\t\t\t\ttime: Date.now(),\n\t\t\t\tdateNow: null,\n\t\t\t};\n\t\t\tstateCopy.tasks = [...tasks];\n\t\t\tstateCopy.tasks.push(newTask);\n\t\t\tconst itemsLeft = stateCopy.tasks.filter((item) => item.completed !== ' completed');\n\t\t\treturn {\n\t\t\t\ttasks: stateCopy.tasks,\n\t\t\t\titemsLeft: itemsLeft.length,\n\t\t\t};\n\t\t}\n\t\tcase TYPE_DELETE_TASK: {\n\t\t\tconst newTask = tasks.filter((item) => item.id !== action.task.id);\n\t\t\tstateCopy.tasks = [...newTask];\n\t\t\tconst itemsLeft = stateCopy.tasks.filter((item) => item.completed !== ' completed');\n\t\t\treturn {\n\t\t\t\ttasks: stateCopy.tasks,\n\t\t\t\titemsLeft: itemsLeft.length,\n\t\t\t};\n\t\t}\n\t\tcase TYPE_ONLABEL_CLICK: {\n\t\t\tconst itemsLeft = stateCopy.tasks.filter((item) => item.completed !== ' completed');\n\t\t\treturn {\n\t\t\t\ttasks: stateCopy.tasks,\n\t\t\t\titemsLeft: itemsLeft.length,\n\t\t\t};\n\t\t}\n\t\tcase TYPE_CLEAR_COMPLETED_ITEMS: {\n\t\t\tconst newTasks = tasks.filter((item) => item.completed !== ' completed');\n\t\t\tstateCopy.tasks = [...newTasks];\n\t\t\treturn {\n\t\t\t\ttasks: stateCopy.tasks,\n\t\t\t\titemsLeft: stateCopy.tasks.length,\n\t\t\t};\n\t\t}\n\t\tcase TYPE_EDIT_TASK: {\n\t\t\tconst newTasks = tasks.map((item) =>\n\t\t\t\titem.id === action.text.id.item.id ? { ...item, text: action.text.text } : item\n\t\t\t);\n\t\t\tstateCopy.tasks = [...newTasks];\n\t\t\treturn {\n\t\t\t\ttasks: stateCopy.tasks,\n\t\t\t\titemsLeft: stateCopy.tasks.length,\n\t\t\t};\n\t\t}\n\t\tcase TYPE_CHANGE_TIME_TASK: {\n\t\t\tconst newTasks = tasks.map((item) =>\n\t\t\t\titem.time ? { ...item, dateNow: formatDistanceToNowStrict(item.time, { addSuffix: true }) } : item\n\t\t\t);\n\t\t\tstateCopy.tasks = [...newTasks];\n\t\t\treturn {\n\t\t\t\ttasks: stateCopy.tasks,\n\t\t\t\titemsLeft: stateCopy.tasks.length,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport const deleteItemAC = (task) => ({ task, type: TYPE_DELETE_TASK });\nexport const changeTimeAC = () => ({ type: TYPE_CHANGE_TIME_TASK });\nexport const labelClickAC = (task) => ({ task, type: TYPE_ONLABEL_CLICK });\nexport const clearCompletedAC = (tasks) => ({ tasks, type: TYPE_CLEAR_COMPLETED_ITEMS });\nexport const AddItemAC = (text) => ({ text, type: TYPE_ADD_TASK });\nexport const editItemAC = (text) => ({ text, type: TYPE_EDIT_TASK });\nexport default taskListReducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Task extends React.Component {\n\tstate = {\n\t\teditMode: false,\n\t\ttext: { ...this.props },\n\t\tid: { ...this.props },\n\t\tcheckbox: false,\n\t\tdateNow: { ...this.props },\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(() => this.tick(), 5000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\tactivateEditMode = () => {\n\t\tthis.setState({\n\t\t\teditMode: true,\n\t\t});\n\t};\n\n\tdeactivateEditMode = (el) => {\n\t\tconst { onEditItem } = this.props;\n\t\tif (el.key === 'Enter') {\n\t\t\tthis.setState({\n\t\t\t\teditMode: false,\n\t\t\t});\n\t\t\tonEditItem(this.state);\n\t\t}\n\t};\n\n\tonTextChange = (el) => {\n\t\tthis.setState({\n\t\t\ttext: el.currentTarget.value,\n\t\t});\n\t};\n\n\tactivateCheckBox = () => {\n\t\tconst { onLabelClicked, item } = this.props;\n\t\tthis.setState({\n\t\t\tcheckbox: true,\n\t\t});\n\t\titem.completed = ' completed';\n\t\tonLabelClicked(item);\n\t};\n\n\tdeactivateCheckBox = () => {\n\t\tconst { onLabelClicked, item } = this.props;\n\t\tthis.setState({\n\t\t\tcheckbox: false,\n\t\t});\n\t\titem.completed = ' ';\n\t\tonLabelClicked(item);\n\t};\n\n\ttick() {\n\t\tconst { onChangeTime } = this.props;\n\t\tthis.setState({\n\t\t\tdateNow: onChangeTime(),\n\t\t});\n\t\tonChangeTime();\n\t}\n\n\trender() {\n\t\tconst { onDeleteItem, item } = this.props;\n\t\tconst { completed, id, dateNow, text } = item;\n\t\tconst { editMode, checkbox } = this.state;\n\t\treturn (\n\t\t\t<li className={completed} key={id}>\n\t\t\t\t{!editMode && (\n\t\t\t\t\t<div className=\"view\">\n\t\t\t\t\t\t{!checkbox && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input className=\"toggle\" type=\"checkbox\" defaultChecked={false} onClick={this.activateCheckBox} />\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<span className=\"description\" onClick={this.activateCheckBox} role=\"presentation\">\n\t\t\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span className=\"created\">created {dateNow}</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{checkbox && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input className=\"toggle\" type=\"checkbox\" defaultChecked onClick={this.deactivateCheckBox} />\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<span className=\"description\" role=\"presentation\" onClick={this.deactivateCheckBox}>\n\t\t\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span className=\"created\">created {dateNow}</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button type=\"button\" className=\"icon icon-edit\" onClick={this.activateEditMode} aria-label=\"edit-btn\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"icon icon-destroy\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tonDeleteItem(item);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\taria-label=\"destroy-btn\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{editMode && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"new-todo\"\n\t\t\t\t\t\t\tplaceholder=\"Edit your message\"\n\t\t\t\t\t\t\tonKeyPress={this.deactivateEditMode}\n\t\t\t\t\t\t\tonChange={this.onTextChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</li>\n\t\t);\n\t}\n}\nTask.propTypes = {\n\tonEditItem: PropTypes.func.isRequired,\n\tonDeleteItem: PropTypes.func.isRequired,\n\tonLabelClicked: PropTypes.func.isRequired,\n\tonChangeTime: PropTypes.func.isRequired,\n\titem: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Task;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport Task from '../Task/Task';\n\nconst TaskList = (props) => {\n\tconst { onDeleteItem, onLabelClicked, onEditItem, onChangeTime, tasks } = props;\n\tconst elements = tasks.map((item) =>\n\t\titem.completed !== ' completed' ? (\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath=\"/active\"\n\t\t\t\trender={() => (\n\t\t\t\t\t<Task\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tonDeleteItem={onDeleteItem}\n\t\t\t\t\t\tonLabelClicked={onLabelClicked}\n\t\t\t\t\t\tonEditItem={onEditItem}\n\t\t\t\t\t\tonChangeTime={onChangeTime}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t) : (\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath=\"/completed\"\n\t\t\t\trender={() => (\n\t\t\t\t\t<Task\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tonDeleteItem={onDeleteItem}\n\t\t\t\t\t\tonLabelClicked={onLabelClicked}\n\t\t\t\t\t\tonEditItem={onEditItem}\n\t\t\t\t\t\tonChangeTime={onChangeTime}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t)\n\t);\n\tconst elementsAll = tasks.map((item) => (\n\t\t<Route\n\t\t\texact\n\t\t\tpath=\"/all\"\n\t\t\trender={() => (\n\t\t\t\t<Task\n\t\t\t\t\titem={item}\n\t\t\t\t\tonDeleteItem={onDeleteItem}\n\t\t\t\t\tonLabelClicked={onLabelClicked}\n\t\t\t\t\tonEditItem={onEditItem}\n\t\t\t\t\tonChangeTime={onChangeTime}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t));\n\treturn (\n\t\t<ul className=\"todo-list\">\n\t\t\t{elementsAll}\n\t\t\t{elements}\n\t\t</ul>\n\t);\n};\n\nTaskList.propTypes = {\n\tonEditItem: PropTypes.func.isRequired,\n\tonDeleteItem: PropTypes.func.isRequired,\n\tonLabelClicked: PropTypes.func.isRequired,\n\tonChangeTime: PropTypes.func.isRequired,\n\ttasks: PropTypes.instanceOf(Array).isRequired,\n};\n// class TaskList extends React.Component {\n//     render() {\n//         const {...tasks} = this.props;\n//         const elements = tasks.map(item => ((item.completed !== ' completed')\n//                 ? <Route exact path='/active' render={() =>\n//                     <Task item={item}\n//                           onDeleteItem={this.onDeleteItem}\n//                           onLabelClicked={this.onLabelClicked}\n//                           onEditItem={this.onEditItem}\n//                           onChangeTime={this.onChangeTime}\n//                     />}/>\n//                 : <Route exact path='/completed' render={() =>\n//                     <Task item={item}\n//                           onDeleteItem={this.onDeleteItem}\n//                           onLabelClicked={this.onLabelClicked}\n//                           onEditItem={this.onEditItem}\n//                           onChangeTime={this.onChangeTime}\n//                     />}/>\n//             )\n//         )\n//         const elementsAll = tasks.map(item => (\n//             <Route exact path='/all' render={() =>\n//                 <Task item={item}\n//                       onDeleteItem={this.onDeleteItem}\n//                       onLabelClicked={this.onLabelClicked}\n//                       onEditItem={this.onEditItem}\n//                       onChangeTime={this.onChangeTime}\n//                 />}/>)\n//         );\n//         return (\n//             <ul className=\"todo-list\">\n//                 {elementsAll}\n//                 {elements}\n//             </ul>\n//         );\n//     }\n// }\n\nexport default TaskList;\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { changeTimeAC, deleteItemAC, editItemAC, labelClickAC } from '../redux/TaskList-reducer';\nimport TaskList from './TaskList';\n\nconst TaskListContainer = (props) => <TaskList {...props} />;\n\nconst mapStateToProps = (state) => ({\n\ttasks: state.taskListReducer.tasks,\n\titemsLeft: state.taskListReducer.itemsLeft,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tonEditItem: (action) => {\n\t\tdispatch(editItemAC(action));\n\t},\n\tonDeleteItem: (action) => {\n\t\tdispatch(deleteItemAC(action));\n\t},\n\tonLabelClicked: (action) => {\n\t\tdispatch(labelClickAC(action));\n\t},\n\tonChangeTime: (action) => {\n\t\tdispatch(changeTimeAC(action));\n\t},\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(TaskListContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n\tconst { newItem, handleKeyPress } = props;\n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<h1>todos</h1>\n\t\t\t<input className=\"new-todo\" placeholder=\"What needs to be done?\" ref={newItem} onKeyPress={handleKeyPress} />\n\t\t</header>\n\t);\n};\nHeader.propTypes = {\n\thandleKeyPress: PropTypes.func.isRequired,\n\tnewItem: PropTypes.instanceOf(Object).isRequired,\n};\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './header';\nimport { AddItemAC } from '../redux/TaskList-reducer';\n\nconst mapStateToProps = (state) => ({\n\ttasks: state.taskListReducer.tasks,\n\titemsLeft: state.taskListReducer.itemsLeft,\n});\nconst newItem = React.createRef();\nconst mapDispatchToProps = (dispatch) => ({\n\tnewItem,\n\thandleKeyPress: (el) => {\n\t\tif (el.key === 'Enter') {\n\t\t\tconst text = newItem.current.value;\n\t\t\tdispatch(AddItemAC(text));\n\t\t\tnewItem.current.value = '';\n\t\t}\n\t},\n});\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\nexport default HeaderContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Filters = () => (\n\t<ul className=\"filters\">\n\t\t<NavLink exact to=\"/all\">\n\t\t\t<li>\n\t\t\t\t<button className=\"selected\" type=\"button\">\n\t\t\t\t\tAll\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t\t<NavLink to=\"/active\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">active</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t\t<NavLink to=\"/completed\">\n\t\t\t<li>\n\t\t\t\t<button type=\"button\">completed</button>\n\t\t\t</li>\n\t\t</NavLink>\n\t</ul>\n);\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from './filters/filters';\n\nconst Footer = (props) => {\n\tconst { itemsLeft, clearCompleted } = props;\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<span className=\"todo-count\">{itemsLeft} items left</span>\n\t\t\t<Filters />\n\t\t\t<button className=\"clear-completed\" onClick={clearCompleted} type=\"button\">\n\t\t\t\tClear completed\n\t\t\t</button>\n\t\t</footer>\n\t);\n};\nFooter.propTypes = {\n\tclearCompleted: PropTypes.func.isRequired,\n\titemsLeft: PropTypes.number.isRequired,\n};\nexport default Footer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Footer from './footer';\nimport { clearCompletedAC } from '../redux/TaskList-reducer';\n\nconst mapStateToProps = (state) => ({\n\titemsLeft: state.taskListReducer.itemsLeft,\n});\nconst mapDispatchToProps = (dispatch) => ({\n\tclearCompleted: () => {\n\t\tdispatch(clearCompletedAC());\n\t},\n});\nconst FooterContainer = connect(mapStateToProps, mapDispatchToProps)(Footer);\nexport default FooterContainer;\n","import React from 'react';\nimport TaskListContainer from './components/TaskList/TaskListContainer';\nimport HeaderContainer from './components/Header/headerContainer';\nimport FooterContainer from './components/Footer/FooterContainer';\n\nconst App = () => (\n\t<section className=\"todoapp\">\n\t\t<HeaderContainer />\n\t\t<section className=\"main\">\n\t\t\t<TaskListContainer />\n\t\t\t<FooterContainer />\n\t\t</section>\n\t</section>\n);\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport taskListReducer from './TaskList-reducer';\n\nconst reducers = combineReducers({\n\ttaskListReducer,\n});\n\nconst store = createStore(reducers);\nwindow.store = store;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './components/redux/redux-store';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}